rules_version = '2';

// Craft rules based on data in your Firestore database
service firebase.storage {
  match /b/{bucket}/o {
    // Public reads for all files (adjust if needed)
    match /{allPaths=**} {
      allow read: if true;
    }

    // Helpers
    function isSignedIn() {
      return request.auth != null;
    }
    // Admin flag stored in Firestore roles/{uid}.admin == true
    function isAdmin() {
      return isSignedIn() &&
             exists(/databases/(default)/documents/roles/$(request.auth.uid)) &&
             get(/databases/(default)/documents/roles/$(request.auth.uid)).data.admin == true;
    }

    // Listing photos live under listing_photos/{uid}/**
    match /listing_photos/{uid}/{filePath=**} {
      allow read: if true;

      // Uploads: owner or admin. Enforce size/type checks for everyone.
      allow write: if isSignedIn()
                   && (
                        request.auth.uid == uid || isAdmin()
                      )
                   && request.resource.size < 5 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');

      // Deletes: owner or admin
      allow delete: if isSignedIn() && (request.auth.uid == uid || isAdmin());
    }
  }
}
